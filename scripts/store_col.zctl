from Testing.ZopeTestCase.utils import makerequest
from AccessControl.SecurityManagement import newSecurityManager
from Products.CMFCore.tests.base.security import AnonymousUser, OmnipotentUser
from psycopg import Binary
from lxml import etree
from transaction import commit


user = OmnipotentUser().__of__(app)
newSecurityManager(None, user)
def use_user(userid='reedstrm'):
    user = app.plone.acl_users.getUserById(userid)
    if not user:
        user = app.acl_users.getUserById(userid)
    user = user.__of__(app.plone.acl_users)
    newSecurityManager(None, user)
    return userid

use_user()

app = makerequest(app)
app.REQUEST.set('PARENTS',[app])
app.REQUEST.traverse('/VirtualHostBase/http/cnx.org/plone/VirtualHostRoot/')


mods=app.devrep.manage_test("select moduleid, version from modules m left join module_files mf on m.module_ident  = mf.module_ident where portal_type = 'Collection'  and filename is null order by m.module_ident")

nmods = len(mods)
for i,(modid,ver) in enumerate(mods):
    print "New collxml %s/%s: " % (modid,ver) ,
    try:
        xml = app.plone.content[modid][ver].restrictedTraverse('source_create')()
        xml = etree.tostring(etree.fromstring(xml))
        res = app.plone.portal_moduledb.sqlInsertFile(file = Binary(xml))
        fid = res[0].fileid
        app.plone.portal_moduledb.sqlInsertModuleFile(moduleid=modid, version=ver, fileid=fid, filename='collection.xml',mimetype='text/xml')
        print "XML succeeded"
    except:
        print "XML failed"
        pass
    if i % 10 == 0:
        print "%s Completed" % i
        commit()
        
commit()
